// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamChat.DAL.DBContexts;

namespace TeamChat.DAL.Migrations
{
    [DbContext(typeof(TeamChatDbContext))]
    [Migration("20190424090204_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeamChat.DAL.Entities.TeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Leader");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TeamChat.DAL.Entities.TeamUserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TeamEntityId");

                    b.Property<int>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("TeamEntityId");

                    b.ToTable("TeamUserEntity");
                });

            modelBuilder.Entity("TeamChat.DAL.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamChat.DAL.MessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Author");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MessageEntity");
                });

            modelBuilder.Entity("TeamChat.DAL.Entities.CommentEntity", b =>
                {
                    b.HasBaseType("TeamChat.DAL.MessageEntity");

                    b.Property<int>("Post");

                    b.Property<int?>("PostEntityId");

                    b.Property<int?>("UserEntityId");

                    b.HasIndex("PostEntityId");

                    b.HasIndex("UserEntityId");

                    b.HasDiscriminator().HasValue("CommentEntity");
                });

            modelBuilder.Entity("TeamChat.DAL.Entities.PostEntity", b =>
                {
                    b.HasBaseType("TeamChat.DAL.MessageEntity");

                    b.Property<int>("Team");

                    b.Property<string>("Title");

                    b.Property<int?>("UserEntityId")
                        .HasColumnName("PostEntity_UserEntityId");

                    b.HasIndex("UserEntityId");

                    b.HasDiscriminator().HasValue("PostEntity");
                });

            modelBuilder.Entity("TeamChat.DAL.Entities.TeamUserEntity", b =>
                {
                    b.HasOne("TeamChat.DAL.Entities.TeamEntity")
                        .WithMany("Members")
                        .HasForeignKey("TeamEntityId");
                });

            modelBuilder.Entity("TeamChat.DAL.Entities.CommentEntity", b =>
                {
                    b.HasOne("TeamChat.DAL.Entities.PostEntity")
                        .WithMany("Comments")
                        .HasForeignKey("PostEntityId");

                    b.HasOne("TeamChat.DAL.Entities.UserEntity")
                        .WithMany("Comments")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("TeamChat.DAL.Entities.PostEntity", b =>
                {
                    b.HasOne("TeamChat.DAL.Entities.UserEntity")
                        .WithMany("Posts")
                        .HasForeignKey("UserEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
