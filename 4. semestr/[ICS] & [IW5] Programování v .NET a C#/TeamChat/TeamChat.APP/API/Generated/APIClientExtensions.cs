// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TeamChat.APP.API
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for APIClient.
    /// </summary>
    public static partial class APIClientExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<CommentModelInner> GetAllComments(this IAPIClient operations)
            {
                return operations.GetAllCommentsAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<CommentModelInner>> GetAllCommentsAsync(this IAPIClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllCommentsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<CommentModelInner>> GetAllCommentsWithHttpMessages(this IAPIClient operations, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetAllCommentsWithHttpMessagesAsync(customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void UpdateComment(this IAPIClient operations, CommentModelInner value = default(CommentModelInner))
            {
                operations.UpdateCommentAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateCommentAsync(this IAPIClient operations, CommentModelInner value = default(CommentModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdateCommentWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse UpdateCommentWithHttpMessages(this IAPIClient operations, CommentModelInner value = default(CommentModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UpdateCommentWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void CreateComment(this IAPIClient operations, CommentModelInner value = default(CommentModelInner))
            {
                operations.CreateCommentAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreateCommentAsync(this IAPIClient operations, CommentModelInner value = default(CommentModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CreateCommentWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse CreateCommentWithHttpMessages(this IAPIClient operations, CommentModelInner value = default(CommentModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreateCommentWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static CommentModelInner GetCommentById(this IAPIClient operations, int id)
            {
                return operations.GetCommentByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CommentModelInner> GetCommentByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCommentByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<CommentModelInner> GetCommentByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetCommentByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void DeleteComment(this IAPIClient operations, int id)
            {
                operations.DeleteCommentAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteCommentAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteCommentWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse DeleteCommentWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DeleteCommentWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static CommentModelInner GetLastCommentByUserId(this IAPIClient operations, int id)
            {
                return operations.GetLastCommentByUserIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CommentModelInner> GetLastCommentByUserIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetLastCommentByUserIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<CommentModelInner> GetLastCommentByUserIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetLastCommentByUserIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<CommentModelInner> GetCommentsByPostId(this IAPIClient operations, int id)
            {
                return operations.GetCommentsByPostIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<CommentModelInner>> GetCommentsByPostIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCommentsByPostIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<CommentModelInner>> GetCommentsByPostIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetCommentsByPostIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<PostModelInner> GetAllPosts(this IAPIClient operations)
            {
                return operations.GetAllPostsAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<PostModelInner>> GetAllPostsAsync(this IAPIClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllPostsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<PostModelInner>> GetAllPostsWithHttpMessages(this IAPIClient operations, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetAllPostsWithHttpMessagesAsync(customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void UpdatePost(this IAPIClient operations, PostModelInner value = default(PostModelInner))
            {
                operations.UpdatePostAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdatePostAsync(this IAPIClient operations, PostModelInner value = default(PostModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdatePostWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse UpdatePostWithHttpMessages(this IAPIClient operations, PostModelInner value = default(PostModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UpdatePostWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void CreatePost(this IAPIClient operations, PostModelInner value = default(PostModelInner))
            {
                operations.CreatePostAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreatePostAsync(this IAPIClient operations, PostModelInner value = default(PostModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CreatePostWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse CreatePostWithHttpMessages(this IAPIClient operations, PostModelInner value = default(PostModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreatePostWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static PostModelInner GetPostById(this IAPIClient operations, int id)
            {
                return operations.GetPostByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PostModelInner> GetPostByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetPostByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<PostModelInner> GetPostByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetPostByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void DeletePost(this IAPIClient operations, int id)
            {
                operations.DeletePostAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeletePostAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeletePostWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse DeletePostWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DeletePostWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<PostModelInner> GetAllPostsByTeamId(this IAPIClient operations, int id)
            {
                return operations.GetAllPostsByTeamIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<PostModelInner>> GetAllPostsByTeamIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllPostsByTeamIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<PostModelInner>> GetAllPostsByTeamIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetAllPostsByTeamIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static PostModelInner GetLastPostByUserId(this IAPIClient operations, int id)
            {
                return operations.GetLastPostByUserIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<PostModelInner> GetLastPostByUserIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetLastPostByUserIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<PostModelInner> GetLastPostByUserIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetLastPostByUserIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<TeamListModelInner> GetAllTeams(this IAPIClient operations)
            {
                return operations.GetAllTeamsAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TeamListModelInner>> GetAllTeamsAsync(this IAPIClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllTeamsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<TeamListModelInner>> GetAllTeamsWithHttpMessages(this IAPIClient operations, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetAllTeamsWithHttpMessagesAsync(customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void UpdateTeam(this IAPIClient operations, TeamDetailModelInner value = default(TeamDetailModelInner))
            {
                operations.UpdateTeamAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateTeamAsync(this IAPIClient operations, TeamDetailModelInner value = default(TeamDetailModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdateTeamWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse UpdateTeamWithHttpMessages(this IAPIClient operations, TeamDetailModelInner value = default(TeamDetailModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UpdateTeamWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void CreateTeam(this IAPIClient operations, TeamDetailModelInner value = default(TeamDetailModelInner))
            {
                operations.CreateTeamAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreateTeamAsync(this IAPIClient operations, TeamDetailModelInner value = default(TeamDetailModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CreateTeamWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse CreateTeamWithHttpMessages(this IAPIClient operations, TeamDetailModelInner value = default(TeamDetailModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreateTeamWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static TeamDetailModelInner GetTeamById(this IAPIClient operations, int id)
            {
                return operations.GetTeamByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TeamDetailModelInner> GetTeamByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTeamByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<TeamDetailModelInner> GetTeamByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetTeamByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void DeleteTeam(this IAPIClient operations, int id)
            {
                operations.DeleteTeamAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteTeamAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteTeamWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse DeleteTeamWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DeleteTeamWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static TeamListModelInner GetLessDetailTeamById(this IAPIClient operations, int id)
            {
                return operations.GetLessDetailTeamByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TeamListModelInner> GetLessDetailTeamByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetLessDetailTeamByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<TeamListModelInner> GetLessDetailTeamByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetLessDetailTeamByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<TeamListModelInner> GetTeamsForUserId(this IAPIClient operations, int id)
            {
                return operations.GetTeamsForUserIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TeamListModelInner>> GetTeamsForUserIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTeamsForUserIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<TeamListModelInner>> GetTeamsForUserIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetTeamsForUserIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<UserListModelInner> GetAllUsers(this IAPIClient operations)
            {
                return operations.GetAllUsersAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserListModelInner>> GetAllUsersAsync(this IAPIClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAllUsersWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<UserListModelInner>> GetAllUsersWithHttpMessages(this IAPIClient operations, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetAllUsersWithHttpMessagesAsync(customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void UpdateUser(this IAPIClient operations, UserDetailModelInner value = default(UserDetailModelInner))
            {
                operations.UpdateUserAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateUserAsync(this IAPIClient operations, UserDetailModelInner value = default(UserDetailModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.UpdateUserWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse UpdateUserWithHttpMessages(this IAPIClient operations, UserDetailModelInner value = default(UserDetailModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.UpdateUserWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            public static void CreateUser(this IAPIClient operations, UserRegistrationModelInner value = default(UserRegistrationModelInner))
            {
                operations.CreateUserAsync(value).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreateUserAsync(this IAPIClient operations, UserRegistrationModelInner value = default(UserRegistrationModelInner), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.CreateUserWithHttpMessagesAsync(value, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='value'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse CreateUserWithHttpMessages(this IAPIClient operations, UserRegistrationModelInner value = default(UserRegistrationModelInner), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreateUserWithHttpMessagesAsync(value, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static UserDetailModelInner GetUserById(this IAPIClient operations, int id)
            {
                return operations.GetUserByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserDetailModelInner> GetUserByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUserByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserDetailModelInner> GetUserByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetUserByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void DeleteUser(this IAPIClient operations, int id)
            {
                operations.DeleteUserAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteUserAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteUserWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse DeleteUserWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DeleteUserWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static UserListModelInner GetLessDetailUserById(this IAPIClient operations, int id)
            {
                return operations.GetLessDetailUserByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserListModelInner> GetLessDetailUserByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetLessDetailUserByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserListModelInner> GetLessDetailUserByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetLessDetailUserByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static UserLoginModelInner GetUserLoginModelById(this IAPIClient operations, int id)
            {
                return operations.GetUserLoginModelByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserLoginModelInner> GetUserLoginModelByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUserLoginModelByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserLoginModelInner> GetUserLoginModelByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetUserLoginModelByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='email'>
            /// </param>
            public static UserLoginModelInner GetUserLoginModelByEmail(this IAPIClient operations, string email)
            {
                return operations.GetUserLoginModelByEmailAsync(email).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='email'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserLoginModelInner> GetUserLoginModelByEmailAsync(this IAPIClient operations, string email, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUserLoginModelByEmailWithHttpMessagesAsync(email, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='email'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserLoginModelInner> GetUserLoginModelByEmailWithHttpMessages(this IAPIClient operations, string email, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetUserLoginModelByEmailWithHttpMessagesAsync(email, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static UserProfileModelInner GetUserProfileModelById(this IAPIClient operations, int id)
            {
                return operations.GetUserProfileModelByIdAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<UserProfileModelInner> GetUserProfileModelByIdAsync(this IAPIClient operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUserProfileModelByIdWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<UserProfileModelInner> GetUserProfileModelByIdWithHttpMessages(this IAPIClient operations, int id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetUserProfileModelByIdWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

    }
}
